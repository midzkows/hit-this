package uderzwto;

import java.applet.Applet;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.awt.Dimension;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.Dimension;
import static java.lang.Thread.sleep;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ma≈Çgorzata
 */
<<<<<<< HEAD
public class Rozgrywka extends JPanel implements ActionListener {
=======
public class Rozgrywka extends JPanel {
>>>>>>> Working image changing
    boolean leftActive = false;
    boolean rightActive = false;
    boolean downActive = false;
    boolean upActive = false;
<<<<<<< HEAD
    Timer tajmex = new Timer(1000,this);
    int liczniczek = 0;
=======
>>>>>>> Working image changing
//    JLabel Up = new JLabel();
//    JLabel Down = new JLabel();
//    JLabel Left = new JLabel();
//    JLabel Right = new JLabel();
    ImageIcon Gora = new ImageIcon("obraz/up.png"); 
    ImageIcon Dol = new ImageIcon("obraz/down.png"); 
    ImageIcon Lewo = new ImageIcon("obraz/left.png"); 
    ImageIcon Prawo = new ImageIcon("obraz/right.png"); 
    ImageIcon Ggora = new ImageIcon("obraz/uup.png"); 
    ImageIcon Ddol = new ImageIcon("obraz/ddown.png"); 
    ImageIcon Llewo = new ImageIcon("obraz/lleft.png"); 
<<<<<<< HEAD
    ImageIcon Pprawo = new ImageIcon("obraz/rrght.png");
=======
    ImageIcon Pprawo = new ImageIcon("obraz/rright.png");
>>>>>>> Working image changing
    JButton maksikas = new JButton("haha");
    String imie;
    int poziom;
    JLabel Imie = new JLabel();
    JLabel Poziom = new JLabel();
    int[] losy;
    boolean game = false;
    int liczba = 0;

    Rozgrywka(){
        super();
        setLayout(null);
//        add(Up);
//        add(Down);
//        add(Left);
//        add(Right);
        add(Imie);
        add(Poziom);
        add(maksikas);
//        Up.setIcon(Gora);
//        Down.setIcon(Dol);
//        Left.setIcon(Lewo);
//        Right.setIcon(Prawo);
//        Up.setBounds(200, 300, 86, 86);
//        Down.setBounds(200, 500, 86, 86);
//        Left.setBounds(100, 400, 86, 86);
//        Right.setBounds(300, 400, 86, 86);
        Imie.setBounds(0, 0, 400, 50);
        Poziom.setBounds(500, 0, 700, 40);
<<<<<<< HEAD
        maksikas.setBounds(100,100,100,100);
        maksikas.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("ELO");
                leftActive = !leftActive;
            }
        });
=======
//        maksikas.setBounds(100,100,100,100);
//        maksikas.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                System.out.println("ELO");
//                leftActive = !leftActive;
//            }
//        });

>>>>>>> Working image changing
        this.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                super.keyPressed(e);
            }
        });
    }
    @Override
    public void paint(Graphics g)
    {
    Graphics2D g2d = (Graphics2D)g;
    super.paint(g);
    Image image_to_draw = upActive ? Ggora.getImage() : Gora.getImage();
    g2d.drawImage(image_to_draw, 200, 300, null);
    image_to_draw = downActive ? Ddol.getImage() : Dol.getImage();
    g2d.drawImage(image_to_draw, 200, 500, null);
    image_to_draw = rightActive ? Pprawo.getImage() : Prawo.getImage();
    g2d.drawImage(image_to_draw, 300, 400, null);
    image_to_draw = leftActive ? Llewo.getImage() : Lewo.getImage();
    g2d.drawImage(image_to_draw, 100, 400, null);
    g.setFont(new Font("Times New Roman", Font.BOLD, 40));
<<<<<<< HEAD
    //drawArows(g, losy);
=======
  
>>>>>>> Working image changing
    g2d.dispose();
    repaint();

    }
<<<<<<< HEAD

    void startBlinking()
    {
        tajmex.setRepeats(true);
        tajmex.start();
    }
=======
>>>>>>> Working image changing

    void setUsersInfo(int lvl, String imie){
        poziom = lvl;
        Imie.setText("GRACZ: " + imie);
        Poziom.setText("Poziom: " + lvl);
        Imie.setFont(new Font("Times New Roma", Font.BOLD, 50));
        Poziom.setFont(new Font("Times New Roma", Font.BOLD, 50));
    }
    
    int[] prepareGame(){

        System.out.println(poziom);
        Random randomGenerator = new Random();
     // 0 is up, 1 is down, 2 is left, 3 is right
    switch(poziom){
        case 1:
           liczba = 4;
           break;
        case 2:
           liczba = 8;
           break;
        case 3:
           liczba = 12;
           break;
    }
        losy = new int[liczba];
        for (int i = 0; i < liczba; i++)
        {
            losy[i] = randomGenerator.nextInt(4);
            System.out.println(losy[i]);
        }
        game = true;
        return losy;
               
    }
<<<<<<< HEAD

    @Override
    public void actionPerformed(ActionEvent e) {
        liczniczek++;
        if (liczniczek == 1) {
            leftActive = true;
            rightActive = false;
            upActive = false;
            downActive = false;
        }
        if (liczniczek == 2) {
            leftActive = false;
            rightActive = true;
            upActive = false;
            downActive = false;
        }
        if (liczniczek == 3) {
            leftActive = false;
            rightActive = false;
            upActive = true;
            downActive = false;
        }
        if (liczniczek == 4) {
            leftActive = false;
            rightActive = false;
            upActive = false;
            downActive = true;
        }
        if (liczniczek > 5)
        {
            if (liczniczek == 3) {
                leftActive = false;
                rightActive = false;
                upActive = false;
                downActive = false;
=======
    
    void drawArows(int[] losy)
    {
        if (game){

                System.out.println("OMGOMG");
                for (int i = 0; i < liczba; i++){

                switch(losy[i]){
                    case 0:
                        upActive = true;
                        downActive = false;
                        leftActive = false;
                        rightActive = false;
                        break;
                    case 1:
                        downActive = true;
                        leftActive = false;
                        rightActive = false;
                        upActive = false;
                        break;
                    case 2:
                        leftActive = true;
                        rightActive = false;
                        upActive = false;
                        leftActive = false;

                        break;
                    case 3:
                        upActive = false;
                        downActive = false;
                        leftActive = false;
                        rightActive = true;
                        break;

>>>>>>> Working image changing
            }
                repaint();
        }
<<<<<<< HEAD
        repaint();
    }

//    void drawArows(int[] losy)
//    {
//        if (game){
//
//            System.out.println("OMGOMG");
//            for (int i = 0; i < liczba; i++){
//
//            switch(losy[i]){
//                case 0:
//                    System.out.println(""
//                            + "hej" + i);
//                    Up.setIcon(Ggora);
//                    Ggora.getImage().flush();
//                    this.getParent().repaint();
//                    try {
//                            Thread.sleep(2000);
//                    } catch(InterruptedException ex) {
//                            Thread.currentThread().interrupt();
//                        }
//                    Up.repaint();
//                    repaint();
//                    break;
//
//            }
//            }
//        }
        
//        Graphics2D g2d = (Graphics2D)g;
//        System.out.println("LOOOL");
//        if (game){
//            System.out.println("dupa");
//            g2d.drawImage(uup, 200, 200, null);
//            repaint();
//                    try {
//                        Thread.sleep(2000);
//                    } catch(InterruptedException ex) {
//                        Thread.currentThread().interrupt();
//                    }
//                    g2d.drawImage(up, 200, 300, null);
//            repaint();
//                if(losy[i] == 0){
//                    g2d.drawImage(uup, 200, 300, null);
//                    try {
//                        Thread.sleep(2000);
//                    } catch(InterruptedException ex) {
//                        Thread.currentThread().interrupt();
//                    }
//                    g2d.drawImage(up, 200, 300, null);
//                }
//                else if (losy[i] == 1){
//                    g2d.drawImage(ddown, 200, 500, null);
//                    try {
//                        Thread.sleep(2000);
//                    } catch(InterruptedException ex) {
//                        Thread.currentThread().interrupt();
//                    }
//                    g2d.drawImage(down, 200, 500, null); 
//                    }
//                    else if (losy[i] == 2){
//                        g2d.drawImage(lleft, 100, 400, null);
//
//                        try {
//                            Thread.sleep(2000);
//                        } catch(InterruptedException ex) {
//                            Thread.currentThread().interrupt();
//                        }
//                            g2d.drawImage(left, 100, 400, null);  
//                    }
//                    else if (losy[i] == 3){
//                        g2d.drawImage(rright, 300, 400, null);
//
//                        try {
//                            Thread.sleep(2000);
//                        } catch(InterruptedException ex) {
//                            Thread.currentThread().interrupt();
//                        }
//                        g2d.drawImage(right, 300, 400, null);
//                    }
            }
//        }
        
       
 
=======
        }
    }
}
>>>>>>> Working image changing
    