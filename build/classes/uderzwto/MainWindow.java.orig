package uderzwto;

import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;



public final class MainWindow extends JFrame {
    MenuPanel Menu = new MenuPanel();
    Rozgrywka Gra = new Rozgrywka(); 
    Poziomy WybierzPoziom = new Poziomy();
    ArrayList<Player> Gracze = new ArrayList<Player>();
    String imie_do_zapisu;
    CardLayout lm;
    JPanel Glowny = new JPanel();
    boolean lvlShowing = false;
    boolean mainShowing = true;
    boolean gameShowing = false;
    int lvl = 1;

    MainWindow(String nazwa){
        super(nazwa);
        lm = new CardLayout();
        Glowny.setFocusable(true);
        Glowny.setLayout(lm);
        Glowny.add(Menu, "MENU");
        Glowny.add(Gra, "GRA");
        Glowny.add(WybierzPoziom, "POZIOM");
        add(Glowny);
        setResizable(false);
        setSize(1024,768);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Menu.addComponentListener(new CardManager());
        Gra.addComponentListener(new CardManager());
        WybierzPoziom.addComponentListener(new CardManager());
        String code = JOptionPane.showInputDialog(Glowny, 
        "Wprowadz imie:", 
        "Witaj uzytkowniku!",
        JOptionPane.WARNING_MESSAGE);
        if (code == null || code.equals("")){
            System.exit(0);
        }
        Menu.setUsersName(code);
        
        Glowny.addKeyListener(new KeyAdapter(){
        @Override
        public void keyPressed(KeyEvent ke){
            if (mainShowing){
                switch(ke.getKeyCode())
                {
                    case KeyEvent.VK_S:
                        mainShowing = false;
                        lm.show(Glowny, "GRA");
                        Gra.setUsersInfo(getLevel(), code);
                        gameShowing = true;
                        Gra.startBlinking();
                        break;
                    case KeyEvent.VK_I:

                        break;

                    case KeyEvent.VK_P:
                        mainShowing = false;
                        lvlShowing = true;
                        lm.show(Glowny, "POZIOM");
                        break;
                    case KeyEvent.VK_Q:
                        System.exit(0);
                        break;
                }
                }
            else if (lvlShowing){
                switch(ke.getKeyCode()){
                    case KeyEvent.VK_1:   
                        setLevel(1);
                        break;
                    case KeyEvent.VK_2:
                        setLevel(2);
                        System.out.println(getLevel());
                        break;
                    case KeyEvent.VK_3:
                        setLevel(3);
                        break;
                    case KeyEvent.VK_S:
                        Gra.setUsersInfo(getLevel(), code);
                        lm.show(Glowny, "GRA");
                        gameShowing = true;
                        break;
                }
            }
        }
                });

        }
    
    void setLevel(int level){
        System.out.println(level);
        this.lvl = level;
    }
    
    int getLevel(){
        System.out.println(lvl);
        return lvl;
    }


    class CardManager implements ComponentListener
    {

        @Override
        public void componentResized(ComponentEvent e) {
          
        }

        @Override
        public void componentMoved(ComponentEvent e) {
            Component compa = (Component) e.getSource();
            compa.requestFocus();
            System.out.println(compa.getName());
            JPanel card = null;
            for (Component comp : Glowny.getComponents()) {
                if (comp.isVisible() == true) {
                    card = (JPanel) comp;
                    System.out.println(card.getName());
                }
            }
        }

        @Override
        public void componentShown(ComponentEvent e) {
            Component compa = (Component) e.getSource();
            if (e.getSource() == Gra && compa.isVisible()){
<<<<<<< HEAD
                //Gra.drawArows(Gra.prepareGame());
=======
                Gra.drawArows(Gra.prepareGame());
>>>>>>> Working image changing
                System.out.println("GRA");
            }
            else if (e.getSource() == Menu)
                System.out.println("MeNU");
            else if (e.getSource() == WybierzPoziom)
                System.out.println("POZIOM");

                }
        @Override
        public void componentHidden(ComponentEvent e) {
        }

    }
}
